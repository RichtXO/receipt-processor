@rootURL = http://localhost:8080

### Adding Target receipt
POST {{rootURL}}/receipts/process
Content-Type: application/json

< json/Target.json

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.id === "674d7acc-9eb7-52b9-85c3-4384c200bcbe", "Response ID is correct")
    });
%}

### Adding M&M Corner Market receipt
POST {{rootURL}}/receipts/process
Content-Type: application/json

< json/M&M.json

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.id === "0ca29a3d-884b-5b30-83f6-afaba112382d", "Response ID is correct")
    });
%}

### Checking Target Receipt Points
GET {{rootURL}}/receipts/674d7acc-9eb7-52b9-85c3-4384c200bcbe/points
Accept: application/json

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.points === 28, "Response points is correct")
    });
%}

### Checking M&M Corner Market Points
GET {{rootURL}}/receipts/0ca29a3d-884b-5b30-83f6-afaba112382d/points

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.points === 109, "Response points is correct")
    });
%}

### Checking non-existing receipt
GET {{rootURL}}/receipts/NOTVALID/points

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 404, "Response status is not 404");
        client.assert(response.body.includes("No receipt found for ID provided!"))
    });
%}



